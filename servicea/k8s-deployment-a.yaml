---
apiVersion: v1
kind: Service                    # Type of kubernetes resource
metadata:
  name: k8s-service-a   # Name of the resource
spec:
  type: NodePort                 # A port is opened on each node in your cluster via Kube proxy.
  ports:                         # Take incoming HTTP requests on port 9090 and forward them to the targetPort of 8080
    - name: http
      port: 9090
      targetPort: 8081
  selector:
    app: demo-kubernetes-a         # Map any pod with label `app=go-hello-world` to this service

---
apiVersion: apps/v1
kind: Deployment                 # Type of Kubernetes resource
metadata:
  name: demo-kubernetes-a           # Name of the Kubernetes resource
spec:
  replicas: 1                    # Number of pods to run at any given time
  selector:
    matchLabels:
      app: demo-kubernetes-a       # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels:                    # The labels that will be applied to all of the pods in this deployment
        app: demo-kubernetes-a
    spec:                        # Spec for the container which will run in the Pod
      containers:
        - name: demo-kubernetes-a
          image: luannt2909/demo-kubernetes-a:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081  # Should match the port number that the Go application listens on
          env:
            - name: BASEURL
              value: http://192.168.99.100:32355
          livenessProbe:           # To check the health of the Pod
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe:          # To check if the Pod is ready to serve traffic or not
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
